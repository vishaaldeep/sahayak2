// Test script to verify admin endpoints are working\nconst axios = require('axios');\n\nasync function testEndpoints() {\n    const baseURL = 'http://localhost:5000';\n    \n    console.log('🎯 Testing Admin Endpoints');\n    console.log('=' .repeat(40));\n    \n    // Test 1: Server health check\n    try {\n        console.log('\\n1. Testing server health...');\n        const response = await axios.get(baseURL);\n        console.log('✅ Server is running:', response.data);\n    } catch (error) {\n        console.log('❌ Server is not running');\n        console.log('   Start server with: cd backend_new && npm start');\n        return;\n    }\n    \n    // Test 2: Admin auth endpoint\n    try {\n        console.log('\\n2. Testing admin auth endpoint...');\n        await axios.post(`${baseURL}/api/admin/login`, {\n            email: 'test@test.com',\n            password: 'test'\n        });\n    } catch (error) {\n        if (error.response?.status === 401 || error.response?.status === 400) {\n            console.log('✅ Admin auth endpoint exists (expected auth failure)');\n        } else if (error.response?.status === 404) {\n            console.log('❌ Admin auth endpoint not found');\n        } else {\n            console.log('⚠️  Admin auth endpoint error:', error.response?.status);\n        }\n    }\n    \n    // Test 3: Admin management endpoints (without auth)\n    const managementEndpoints = [\n        '/api/admin/management/csv-jobs',\n        '/api/admin/management/jobs-stats',\n        '/api/admin/management/jobs'\n    ];\n    \n    console.log('\\n3. Testing admin management endpoints...');\n    for (const endpoint of managementEndpoints) {\n        try {\n            await axios.get(`${baseURL}${endpoint}`);\n            console.log(`✅ ${endpoint} - exists`);\n        } catch (error) {\n            const status = error.response?.status;\n            if (status === 401 || status === 403) {\n                console.log(`✅ ${endpoint} - exists (auth required)`);\n            } else if (status === 404) {\n                console.log(`❌ ${endpoint} - not found`);\n            } else {\n                console.log(`⚠️  ${endpoint} - status ${status}`);\n            }\n        }\n    }\n    \n    // Test 4: Check if routes are properly registered\n    console.log('\\n4. Route registration analysis:');\n    try {\n        // Try the old path\n        await axios.get(`${baseURL}/api/admin/csv-jobs`);\n    } catch (error) {\n        if (error.response?.status === 404) {\n            console.log('✅ Old admin routes (/api/admin/csv-jobs) properly removed');\n        } else {\n            console.log('⚠️  Old admin routes still responding');\n        }\n    }\n    \n    console.log('\\n🏁 Endpoint testing completed');\n    console.log('\\nIf endpoints show \"auth required\", that\\'s expected.');\n    console.log('The 404 error should be resolved if endpoints exist.');\n}\n\n// Run the test\ntestEndpoints().catch(error => {\n    console.error('Test failed:', error.message);\n    if (error.code === 'ECONNREFUSED') {\n        console.log('\\n💡 Server is not running. Start it with:');\n        console.log('   cd backend_new && npm start');\n    }\n});"