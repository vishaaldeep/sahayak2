const express = require('express');\nconst router = express.Router();\nconst Agreement = require('../Model/Agreement');\nconst Offer = require('../Model/Offer');\nconst { requireAuth } = require('../middleware/auth');\n\n// Debug endpoint to check agreements\nrouter.get('/agreements', requireAuth, async (req, res) => {\n  try {\n    const agreements = await Agreement.find({})\n      .populate('employer_id', 'name email')\n      .populate('seeker_id', 'name email')\n      .populate('job_id', 'title')\n      .sort({ created_at: -1 })\n      .limit(10);\n    \n    res.json({\n      count: agreements.length,\n      agreements: agreements.map(agreement => ({\n        _id: agreement._id,\n        status: agreement.status,\n        employer: agreement.employer_id?.name || 'N/A',\n        seeker: agreement.seeker_id?.name || 'N/A',\n        job: agreement.job_id?.title || 'N/A',\n        created_at: agreement.created_at,\n        has_pdf: !!agreement.agreement_pdf_base64\n      }))\n    });\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\n// Debug endpoint to check offers with agreements\nrouter.get('/offers-with-agreements/:employerId', requireAuth, async (req, res) => {\n  try {\n    const { employerId } = req.params;\n    const offers = await Offer.find({ employer_id: employerId })\n      .populate('job_id', 'title')\n      .populate('seeker_id', 'name email')\n      .populate('agreement_id')\n      .sort({ created_at: -1 });\n    \n    res.json({\n      count: offers.length,\n      offers: offers.map(offer => ({\n        _id: offer._id,\n        status: offer.status,\n        job: offer.job_id?.title || 'N/A',\n        seeker: offer.seeker_id?.name || 'N/A',\n        wage: `â‚¹${offer.offered_wage} ${offer.offered_wage_type}`,\n        has_agreement: !!offer.agreement_id,\n        agreement_id: offer.agreement_id?._id || null,\n        agreement_status: offer.agreement_id?.status || null,\n        created_at: offer.created_at\n      }))\n    });\n  } catch (error) {\n    res.status(500).json({ error: error.message });\n  }\n});\n\nmodule.exports = router;"