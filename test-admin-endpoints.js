const axios = require('axios');\n\n// Test admin endpoints\nasync function testAdminEndpoints() {\n    const baseURL = 'http://localhost:5000/api';\n    \n    console.log('🎯 Testing Admin Endpoints...');\n    console.log('=' .repeat(50));\n    \n    // Test 1: Check if server is running\n    try {\n        console.log('\\n1. Testing server connection...');\n        const response = await axios.get(`${baseURL.replace('/api', '')}`);\n        console.log('✅ Server is running:', response.data);\n    } catch (error) {\n        console.error('❌ Server connection failed:', error.message);\n        return;\n    }\n    \n    // Test 2: Check admin auth endpoint\n    try {\n        console.log('\\n2. Testing admin auth endpoint...');\n        const response = await axios.post(`${baseURL}/admin/login`, {\n            email: 'test@admin.com',\n            password: 'wrongpassword'\n        });\n        console.log('Admin auth response:', response.data);\n    } catch (error) {\n        if (error.response?.status === 401 || error.response?.status === 400) {\n            console.log('✅ Admin auth endpoint is working (expected auth failure)');\n        } else {\n            console.error('❌ Admin auth endpoint error:', error.response?.status, error.response?.data);\n        }\n    }\n    \n    // Test 3: Check admin management endpoints (without auth)\n    try {\n        console.log('\\n3. Testing admin management endpoints (without auth)...');\n        const response = await axios.get(`${baseURL}/admin/management/csv-jobs`);\n        console.log('CSV jobs response:', response.data);\n    } catch (error) {\n        if (error.response?.status === 401 || error.response?.status === 403) {\n            console.log('✅ Admin management endpoint is working (expected auth failure)');\n            console.log('Status:', error.response.status);\n            console.log('Message:', error.response.data?.message);\n        } else if (error.response?.status === 404) {\n            console.error('❌ Admin management endpoint not found (404)');\n            console.log('This suggests the routes are not properly registered');\n        } else {\n            console.error('❌ Admin management endpoint error:', error.response?.status, error.response?.data);\n        }\n    }\n    \n    // Test 4: List all available routes\n    try {\n        console.log('\\n4. Testing route discovery...');\n        // Try some common endpoints to see what's available\n        const testRoutes = [\n            '/admin',\n            '/admin/management',\n            '/admin/management/csv-jobs',\n            '/users',\n            '/jobs'\n        ];\n        \n        for (const route of testRoutes) {\n            try {\n                await axios.get(`${baseURL}${route}`);\n                console.log(`✅ Route exists: ${route}`);\n            } catch (error) {\n                const status = error.response?.status;\n                if (status === 401 || status === 403) {\n                    console.log(`✅ Route exists (auth required): ${route}`);\n                } else if (status === 404) {\n                    console.log(`❌ Route not found: ${route}`);\n                } else {\n                    console.log(`? Route status ${status}: ${route}`);\n                }\n            }\n        }\n    } catch (error) {\n        console.error('Error in route discovery:', error.message);\n    }\n    \n    console.log('\\n🏁 Admin endpoint test completed');\n}\n\n// Run the test\nconsole.log('🚀 Starting Admin Endpoint Test...\\n');\ntestAdminEndpoints().catch(console.error);